1
00:00:00,00 --> 00:00:04,920
Have you been learning to Vibe Code and create your own websites or applications 

2
00:00:04,920 --> 00:00:06,320
using ChatGPT 

3
00:00:06,520 --> 00:00:07,120
or Claude 

4
00:00:07,120 --> 00:00:12,160
or Claude Code? And now you're thinking, I've created this beautiful little application. 

5
00:00:12,160 --> 00:00:16,350
How do I host it in this video? That's the problem we're tackling. Let's get into 

6
00:00:16,350 --> 00:00:16,600
it.

7
00:00:16,600 --> 00:00:22,400
Let's have a look at a couple of landing pages that were created using very simple 

8
00:00:22,400 --> 00:00:27,600
prompting. And this was all done in the previous video. And it shows you how with 

9
00:00:27,600 --> 00:00:31,920
three simple prompts, you can make beautiful landing pages. You can even go into 

10
00:00:31,920 --> 00:00:36,840
concepts like modifying them so that they have a bit of a Christmas look and feel. 

11
00:00:36,840 --> 00:00:43,280
We've got some animated snowflakes. I even took this over to a friend Readapted the 

12
00:00:43,280 --> 00:00:48,560
company to his brand, which was more as a lawyer, but reformed it. So it was in the 

13
00:00:48,560 --> 00:00:53,710
style of the Smurfs. So we took his legal information. We converted it into a Smurf 

14
00:00:53,710 --> 00:00:59,600
landing page. So this is all looking great. Great HTML, great styling, but now we 

15
00:00:59,600 --> 00:01:00,560
want to host it.

16
00:01:00,550 --> 00:01:04,870
Now, if you're actually looking for the code for these pages, you can find it over 

17
00:01:04,910 --> 00:01:11,230
on this GitHub repository, which is the AppyDave, AppyDave,. It's number three. And 

18
00:01:11,270 --> 00:01:15,750
there's also a link to the video in the description. But what we'll do is we'll look 

19
00:01:15,750 --> 00:01:20,550
at the website we're doing today, and it's for a business called Support Signal. 

20
00:01:20,560 --> 00:01:25,70
I've taken one of the templates that we had there. This is not the final way that 

21
00:01:25,70 --> 00:01:29,710
I want the website to work, but this is a simple landing page that I should be able 

22
00:01:29,710 --> 00:01:35,350
to host really quickly. And I've got it in both the widescreen, and we've also got 

23
00:01:35,350 --> 00:01:38,240
it in a mobile friendly version as well.

24
00:01:38,240 --> 00:01:43,100
So let's have a look at the plan of action. And what I've done is just had a quick 

25
00:01:43,100 --> 00:01:48,320
conversation with chat GPT to come up with the basic ideas that we're working through 

26
00:01:48,320 --> 00:01:54,950
today. And I will go through the prompts so that you can adapt it to your situation. 

27
00:01:55,180 --> 00:02:00,350
But essentially, I just wanted to work with a simple HTML file and a logo file. I 

28
00:02:00,350 --> 00:02:04,790
didn't want to do more. I gave it a domain name that I would like to work with, which 

29
00:02:04,790 --> 00:02:10,180
is the supporting signal. And I've decided because I want it to be free forever at 

30
00:02:10,180 --> 00:02:15,860
the moment and very fast, I'm going to use Cloudflare pages. I've talked about it 

31
00:02:15,860 --> 00:02:22,340
using the Cloudflare DNS for pointing to the actual domain name. I've noted where 

32
00:02:22,340 --> 00:02:28,580
the actual repo is and also where the files are on my computer. It's also looked 

33
00:02:28,580 --> 00:02:33,890
at the files and given a structure. So we got the structure, the index file, the 

34
00:02:33,890 --> 00:02:36,830
logo, and we'll have some sort of a read me document. 

35
00:02:36,830 --> 00:02:41,810
Now as we go down, we've got this step-by-step implementation plan for putting it 

36
00:02:41,810 --> 00:02:46,930
into a GitHub repo. And one of the things I've done ahead of time is just created 

37
00:02:46,930 --> 00:02:52,280
the repo. So the organization has been set up to be called Support Signal, 

38
00:02:52,280 --> 00:02:57,260
and I've set up one repository at the moment called Support Signal Placeholder 

39
00:02:57,260 --> 00:03:02,390
with a license and a read me file in it. And so this information that we got here 

40
00:03:02,390 --> 00:03:07,370
should allow us to link the local directory that we've already done the code from 

41
00:03:07,370 --> 00:03:08,300
in the last video 

42
00:03:08,300 --> 00:03:13,610
to this remote repository. After that, we'll look through the steps for setting it 

43
00:03:13,610 --> 00:03:19,70
up with Cloudflare hosting. Now, if you wanted to use something else like vercel, 

44
00:03:19,430 --> 00:03:23,960
you would change the prompts that I'm going to show you that came up with this particular 

45
00:03:24,200 --> 00:03:28,940
document. You really adapt the prompts to the situation that's facing you at the 

46
00:03:28,940 --> 00:03:29,300
moment. 

47
00:03:29,300 --> 00:03:34,370
Now, in my particular case, I'm also using GoDaddy. So we've got information here 

48
00:03:34,370 --> 00:03:35,990
on how to set things up. 

49
00:03:35,990 --> 00:03:40,520
And one of the things is, as I go through this, this might not all work. So I will 

50
00:03:40,640 --> 00:03:46,250
use chat GPT to fix problems on the way, but at least we've got a basic plan of action 

51
00:03:46,250 --> 00:03:52,10
to get started. So we'll push our local code to GitHub, but we'll set up Cloudflare 

52
00:03:52,70 --> 00:03:55,130
pages and connect it to our GitHub repo. 

53
00:03:55,130 --> 00:04:00,410
we'll, we'll set up the Cloudflare DNS. After that, we'll update the GoDaddy name 

54
00:04:00,410 --> 00:04:05,810
service to point to Cloudflare. And lastly, we should be able to change code anytime, 

55
00:04:05,990 --> 00:04:10,580
redeploy it to GitHub, and we'll see whether this is going to update live as well.

56
00:04:10,580 --> 00:04:16,160
So let's look at how you would come up with this for yourself using tiny bit of prompt 

57
00:04:16,160 --> 00:04:20,930
engineering. So if we go to the very top, I just started off with, if I had a raw 

58
00:04:20,930 --> 00:04:26,780
HTML page, how would I publish it to a website? I do own the domain name. I just 

59
00:04:26,780 --> 00:04:31,850
need something very simple and free and easy. You may want to ask me questions along 

60
00:04:31,850 --> 00:04:32,210
the way. 

61
00:04:32,210 --> 00:04:37,820
Now most people would probably go with Netlify, and I didn't want to do that because 

62
00:04:37,820 --> 00:04:42,680
I think there's more benefits. If you want to host a lot of websites, you want 'em 

63
00:04:42,680 --> 00:04:47,600
to be fast and you don't ever want to hit any usage caps. So this is the reason I've 

64
00:04:47,600 --> 00:04:49,280
picked this one. In this case 

65
00:04:49,280 --> 00:04:54,500
now it's asked me four different questions at once, an answer. I've used the speech 

66
00:04:54,500 --> 00:04:59,210
to test. So there's a couple of problems. But essentially it's saying, I use GoDaddy. 

67
00:04:59,420 --> 00:05:04,220
I want to host the CSS and one or two images. I'm comfortable with GitHub 

68
00:05:04,220 --> 00:05:08,840
and I want something fast. I prefer something that I can just add a simple package, 

69
00:05:08,840 --> 00:05:09,470
Jason 

70
00:05:09,470 --> 00:05:14,480
and take the current project to GitHub and deploy it. So there's not much in the 

71
00:05:14,480 --> 00:05:19,850
way of good grammar or even accuracy. But it's worked out that using GitHub for the 

72
00:05:19,850 --> 00:05:26,120
domain comfortable with GitHub, HTML + CSS want fast and easy access. 

73
00:05:26,120 --> 00:05:29,570
it's come up with the best option being netlify in this case. 

74
00:05:29,570 --> 00:05:35,930
I decided I didn't want Netlify, I want Cloudflare. And it's come up with basic benefits 

75
00:05:35,930 --> 00:05:41,150
analysis. So this is great reasons to switch. And so I've just given it one more 

76
00:05:41,150 --> 00:05:46,730
statement, which is give me the full implementation plan. I said I want it for Cloudflare. 

77
00:05:46,760 --> 00:05:50,270
I've told it where I'm putting the code on my computer. 

78
00:05:50,270 --> 00:05:52,640
I've told it the files, so I have access to, 

79
00:05:52,640 --> 00:05:55,130
I told it where the remote repository was. 

80
00:05:55,130 --> 00:05:59,180
And so now we have the document that we are going to talk through for the rest of 

81
00:05:59,180 --> 00:05:59,720
this video.

82
00:05:59,720 --> 00:06:04,600
Now you can see that the first step is to push your local folder to a GitHub repo. 

83
00:06:04,600 --> 00:06:09,200
So what does that mean? So what I'm doing at the moment is taking us down to Visual 

84
00:06:09,200 --> 00:06:14,400
Studio, where I've got the index file for the website. Now, the way the website looks 

85
00:06:14,400 --> 00:06:19,920
at the moment is it's the one generated from the previous video with a little logo 

86
00:06:19,960 --> 00:06:21,840
up in the top left hand corner.

87
00:06:21,840 --> 00:06:26,280
Now, what we want to do is take all of the files that are here and put it into this 

88
00:06:26,280 --> 00:06:28,720
GitHub repo that I've preset up.

89
00:06:28,720 --> 00:06:32,440
Now let's go and get a copy of our script that we want to, 

90
00:06:32,440 --> 00:06:36,730
use to push those files. And it's all commented out here, what it's going to do. 

91
00:06:36,730 --> 00:06:42,850
Step into the current project folder, initialize the local git repo, add in the remote 

92
00:06:42,850 --> 00:06:45,430
one that we've already set up on GitHub. 

93
00:06:45,730 --> 00:06:51,220
create and switch to the main branch. After that, we've got this little statement 

94
00:06:51,220 --> 00:06:55,690
here. Merge the remote history into the local. What we're trying to do is make sure 

95
00:06:55,690 --> 00:07:00,400
they both come together correctly because we've got some files on the local. We've 

96
00:07:00,400 --> 00:07:02,530
also got a couple of files on the remote, 

97
00:07:02,530 --> 00:07:07,210
such as the README file and the license file. After that, we can make sure all our 

98
00:07:07,210 --> 00:07:11,920
files are in our local commit and given a nice message, and after that we can push 

99
00:07:11,920 --> 00:07:16,810
it. So with that, we select all the information we head on down to our terminal and 

100
00:07:16,810 --> 00:07:19,90
we just paste it in and see how it goes. 

101
00:07:19,90 --> 00:07:24,670
So it's finished. We can bring it up at our GitHub repo, and if we hit refresh, we 

102
00:07:24,670 --> 00:07:29,110
should have a new bunch of files and we're now up to two commits as well. And it's 

103
00:07:29,110 --> 00:07:32,140
the initial HTML version merged with the remote.

104
00:07:32,140 --> 00:07:36,500
So the next thing we want to do is set up hosting and we're doing it on Cloudflare 

105
00:07:36,540 --> 00:07:41,620
pages. We've got the URL right here, and I've just brought it up. And what it's saying 

106
00:07:41,620 --> 00:07:46,20
is that we need to go to the pages and create a project. 

107
00:07:46,20 --> 00:07:50,460
so if we come up here to the add button, there should be an area called pages. We'll 

108
00:07:50,460 --> 00:07:56,540
click on that. After that what we want to do is import an existing repository. So 

109
00:07:56,580 --> 00:07:58,220
we'll click on this button right here.

110
00:07:58,220 --> 00:08:02,30
And we'll come down to this button here, press Connect, GitHub. 

111
00:08:02,30 --> 00:08:06,560
And I've got a lot of organizations going on here. So we'll just go to the very end. 

112
00:08:06,560 --> 00:08:09,650
We should have one called Support Signal. We'll click on that. 

113
00:08:09,650 --> 00:08:12,710
And I'm going to use all repositories. 

114
00:08:12,710 --> 00:08:14,270
I'm gonna need to put in a pass key. 

115
00:08:14,270 --> 00:08:19,670
So I've got my GitHub organization and repository, and we've got more instructions 

116
00:08:19,670 --> 00:08:23,630
here. But let's just go with the begin setup, see what we do next. 

117
00:08:23,630 --> 00:08:28,490
And we can lead the preset framework to none. The build command blank, and we just 

118
00:08:28,490 --> 00:08:30,20
need to put in a dot 

119
00:08:30,20 --> 00:08:31,550
and we'll hit save and Deploy. 

120
00:08:31,550 --> 00:08:35,930
It's starting to deploy the website for us here, building it. 

121
00:08:35,930 --> 00:08:40,550
And the instructions have told me the URL, but we're best off clicking on this button 

122
00:08:40,550 --> 00:08:45,860
right here. And let's see if our site loaded. It has, and it's incredibly fast. This 

123
00:08:45,860 --> 00:08:48,350
is one of the benefits of Cloudflare CDN. 

124
00:08:48,830 --> 00:08:54,830
So the next thing we want to do is connect our domain name. And this is the domain 

125
00:08:54,830 --> 00:09:00,150
name we want. We'll go and copy that and we'll head over to the dash Cloudflare. 

126
00:09:00,390 --> 00:09:05,790
From here we've got the domains tab that we can go and click on. And we can then 

127
00:09:05,790 --> 00:09:09,750
search for an existing domain. Now because I have set this up we should be able to 

128
00:09:09,750 --> 00:09:11,270
do a quick scan on that.

129
00:09:11,270 --> 00:09:16,230
It's asked us for a plan. I'm just going to go with the free one for today.

130
00:09:16,230 --> 00:09:21,230
So we got our DNS records here. There's this little message saying that we need to 

131
00:09:21,270 --> 00:09:25,950
complete the instructions in the overview page. When we head over here we've got 

132
00:09:25,950 --> 00:09:32,110
these instructions I'm using GoDaddy so I can log on to that. It says make sure that 

133
00:09:32,110 --> 00:09:32,990
your DNS

134
00:09:32,990 --> 00:09:38,710
is turned off when I head over to GoDaddy. And we can see the DNS management for 

135
00:09:38,710 --> 00:09:45,630
support signal here I click on DNS right here and it says turn on. So it must be 

136
00:09:45,630 --> 00:09:46,310
off at the moment.

137
00:09:46,310 --> 00:09:51,30
So next we're going to come down and grab the name service. We'll click copy on the 

138
00:09:51,30 --> 00:09:55,550
first one. We'll go back to Go Daddy. We'll go and click on the name Service tab 

139
00:09:55,550 --> 00:10:00,70
right here. We've already got two here that were done by GoDaddy. But we're going 

140
00:10:00,70 --> 00:10:01,550
to click on change.

141
00:10:01,550 --> 00:10:05,790
I'll use my own and we'll paste the first one in. We'll come back. We'll click on 

142
00:10:05,790 --> 00:10:09,230
copy for the second one. We'll paste that one in and we'll hit save.

143
00:10:09,230 --> 00:10:14,450
Now our website is configured with Cloudflare. We've got support signal.com 

144
00:10:14,450 --> 00:10:20,540
au, but if I try and access the site, I'm still hitting a landing page on GoDaddy. 

145
00:10:20,780 --> 00:10:25,340
And there's one other thing that we need to change and it is available to us in the 

146
00:10:25,340 --> 00:10:31,400
documentation we will just looking through, and that's that these DNS records also 

147
00:10:31,400 --> 00:10:37,10
need to be deleted. So if we come down here and we look for the two that are sitting 

148
00:10:37,10 --> 00:10:40,160
here, click on that one and that one 

149
00:10:40,160 --> 00:10:42,350
and press delete two records. 

150
00:10:42,350 --> 00:10:43,310
Let that go.

151
00:10:43,310 --> 00:10:48,110
Plus we'll take a look at these CNAME records. So this one we're going to keep. And 

152
00:10:48,110 --> 00:10:53,950
the one below it we're going to edit. And it's going to change related to the information 

153
00:10:53,950 --> 00:11:00,350
that's right here. So we'll take that information. Come on over to here. Paste it 

154
00:11:00,350 --> 00:11:06,350
in without the word target. And it's just a placeholder. And I will take that information 

155
00:11:06,350 --> 00:11:09,510
one more time and add a new record. 

156
00:11:09,910 --> 00:11:15,30
We'll set this to a CNAME, put an At and we'll paste this information in and hit 

157
00:11:15,30 --> 00:11:15,950
save on that.

158
00:11:15,950 --> 00:11:19,310
Now there's one more thing we've got to do, and it's a little tricky to find, to 

159
00:11:19,310 --> 00:11:25,70
be honest. So let's go back to pages, your site, custom domains, and you would think 

160
00:11:25,70 --> 00:11:30,70
it would be clicking on here, but it's actually under this compute workers. We go 

161
00:11:30,70 --> 00:11:30,150
to 

162
00:11:30,150 --> 00:11:31,990
We can now click on our website.

163
00:11:31,990 --> 00:11:35,950
And we have this little tab at the top called Custom Domains.

164
00:11:35,950 --> 00:11:40,830
And I'll just copy the information here. Set up a custom domain, paste it in and 

165
00:11:40,830 --> 00:11:42,30
press continue.

166
00:11:42,30 --> 00:11:45,510
And we'll click on the Activate Domain Name button.

167
00:11:45,510 --> 00:11:48,830
And lastly we'll see if it works. We'll click on this here.

168
00:11:48,830 --> 00:11:55,470
And lastly we will take this domain name and put it into a new browser. And it looks 

169
00:11:55,470 --> 00:11:57,470
like the website is now running.

170
00:11:57,470 --> 00:12:01,550
Now that we have the website up and running, we should test this last capability, 

171
00:12:01,550 --> 00:12:06,470
the auto deploy, whenever we do a GI push. And I think the best way to do that is 

172
00:12:06,470 --> 00:12:11,750
to go and take the title that we've got here and we will go down to a terminal where 

173
00:12:11,750 --> 00:12:16,700
I'm just running claude on this particular folder and put in this prompt. And I'll 

174
00:12:16,700 --> 00:12:20,840
just say, can you come up with a simpler title in the hero? This one's too long. 

175
00:12:20,840 --> 00:12:25,610
And we'll paste the one that we had there and let's see what it comes up with. And 

176
00:12:25,610 --> 00:12:31,250
we'll go with option one. In this case, we're seeing it alter the HTML for us right 

177
00:12:31,250 --> 00:12:31,640
there. 

178
00:12:31,640 --> 00:12:36,200
And lastly, I'm just going to ask it to create a little commit message, which is 

179
00:12:36,200 --> 00:12:41,210
just what the change has been. Then I will ask it to do a commit. And after that 

180
00:12:41,210 --> 00:12:46,670
we'll do a deploy. Once it deploys, we should see an automatic update to the website. 

181
00:12:46,670 --> 00:12:50,300
Make sure we add our file to the GitHub repo, 

182
00:12:50,300 --> 00:12:51,800
say yes to. 

183
00:12:51,800 --> 00:12:57,50
And we can see the differences in the code here if we look at the old version. And 

184
00:12:57,50 --> 00:13:01,400
here is the new version, which probably needs a little bit more formatting, 

185
00:13:01,400 --> 00:13:06,170
So I'll just quickly fix that by just putting in, can you put in a new line, 

186
00:13:06,170 --> 00:13:12,620
between turns and compliance? After that, I've asked it to commit and push. And if 

187
00:13:12,620 --> 00:13:18,290
we hit refresh on the page right now, we should see a change. And there we have it.

188
00:13:18,290 --> 00:13:24,330
So that brings us to the end of deploying this particular website, which we created 

189
00:13:24,330 --> 00:13:29,170
in the previous video, just using a little bit of prompt engineering. And at any 

190
00:13:29,210 --> 00:13:34,370
time we can make changes to it, as you saw. And each time you push the code to your 

191
00:13:34,410 --> 00:13:39,570
GitHub repository, it just makes the changes happen automatically. It's fast. It's 

192
00:13:39,570 --> 00:13:43,850
free. Anyway, I'm AppyDave, please like and subscribe and I'll see you in the next 

193
00:13:43,850 --> 00:13:49,370
video where I'm continuing this journey of coding various aspects of the application 

194
00:13:49,370 --> 00:13:50,650
development process.