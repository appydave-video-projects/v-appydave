1
00:00:00,000 --> 00:00:05,500
In this video, we're developing a simple role and design prompt concept that will 

2
00:00:05,500 --> 00:00:11,667
allow us to build one shot prompts that design front end applications like what we're 

3
00:00:11,667 --> 00:00:15,300
seeing right now from a user experience point of view.

4
00:00:15,333 --> 00:00:21,167
In the last video, we went into detail of setting up both a role and a design brief 

5
00:00:21,167 --> 00:00:27,767
for what was classed as a multi app framework. So the idea that you might have various 

6
00:00:27,834 --> 00:00:33,067
extensions or plugins, you could have global settings for all of them. You could 

7
00:00:33,067 --> 00:00:39,234
collapse that down and from here have individual menu items for each of the applications 

8
00:00:39,234 --> 00:00:41,534
and even go from light to dark mode.

9
00:00:41,534 --> 00:00:45,534
Now, to keep things simple, we're building out our new structure. We're going to 

10
00:00:45,534 --> 00:00:49,635
take information from the last video, and we're just going to do a slight adaption 

11
00:00:49,635 --> 00:00:55,301
on it. So the last video was about a multi app structure within a shell desktop. 

12
00:00:55,435 --> 00:00:59,868
In this situation we only want a single application. So what we'll do is have a look 

13
00:00:59,868 --> 00:01:01,968
at the structure of how this will come together.

14
00:01:01,968 --> 00:01:06,435
Now, I usually start a conversation with a line similar to this. In this conversation 

15
00:01:06,435 --> 00:01:10,902
we will explore and I give it a headline. After that, I give it an instruction to 

16
00:01:10,935 --> 00:01:15,369
say yay! And please wait, because I don't actually want it to do anything with this 

17
00:01:15,435 --> 00:01:17,969
information because I haven't told it what to do.

18
00:01:17,969 --> 00:01:24,036
Now, I don't usually go straight into getting it to use a detailed design prompt 

19
00:01:24,036 --> 00:01:29,236
to build an application. Instead, I want it to become a certain sort of person. In 

20
00:01:29,236 --> 00:01:35,570
this case, it's going to be a single app UX/UI, mockup designer, or an architect 

21
00:01:35,570 --> 00:01:40,670
or something like that. So I'll have a simple prompt that says read and wait for 

22
00:01:40,670 --> 00:01:45,637
guidance. I'll press enter, and then I'll paste in a really detailed description 

23
00:01:45,637 --> 00:01:50,470
of the sort of person that would be perfect for writing this sort of application.

24
00:01:50,470 --> 00:01:55,970
Now the last prompt I'll do is code implementation prompt. So see instructions of 

25
00:01:55,970 --> 00:02:00,770
what I'm trying to build. And it'll usually be fairly detailed, but it's simply here 

26
00:02:00,770 --> 00:02:06,104
is the design brief. Please implement. And then I paste it in. Now you might be wondering 

27
00:02:06,137 --> 00:02:08,304
do you need the first two prompts at all?

28
00:02:08,304 --> 00:02:12,837
And the answer is not really the first one. Definitely you don't need, but I like 

29
00:02:12,837 --> 00:02:14,938
to start it. Then afterwards, if 

30
00:02:14,938 --> 00:02:23,105
the second prompt doesn't do exactly what I want, or 
the third prompt doesn't do exactly what I want, I can go back and edit them, knowing 

31
00:02:23,138 --> 00:02:27,771
that I still understand where the start of the conversation is. As for the role prompt, 

32
00:02:27,771 --> 00:02:32,605
if you don't include that, you'll still probably get a good outcome if your requirements 

33
00:02:32,605 --> 00:02:34,438
document is detailed, 

34
00:02:34,472 --> 00:02:39,805
But what the role will do is give you a higher probability of success, because it 

35
00:02:39,805 --> 00:02:43,939
won't just be reading the instruction from the point of view of a general large language 

36
00:02:43,939 --> 00:02:48,805
model, it will impersonate and think like the person that would normally implement 

37
00:02:48,805 --> 00:02:53,339
this, and they think of things a little bit differently to a generalist person.

38
00:02:53,339 --> 00:02:58,172
Now, rather than starting from scratch on this one, I'm going to build on top of 

39
00:02:58,172 --> 00:03:04,539
a successful implementation because we'd already built this multi application, which 

40
00:03:04,539 --> 00:03:09,139
means we've got multiple applications on the left. When you click on one of them, 

41
00:03:09,139 --> 00:03:14,573
the idea is that the menu on the right here or in the middle becomes dynamic based 

42
00:03:14,573 --> 00:03:16,273
on that particular application, 

43
00:03:16,273 --> 00:03:21,940
we essentially want the same application minus this panel and a couple of other global 

44
00:03:21,940 --> 00:03:22,673
settings.

45
00:03:22,673 --> 00:03:27,907
So what I've done is just gone down a little bit further after that was created and 

46
00:03:27,907 --> 00:03:32,640
given a new prompt, basically saying that earlier in the conversation you gave me 

47
00:03:32,640 --> 00:03:39,274
a definition for a role, and I actually pasted the role in again, but I'm asking 

48
00:03:39,274 --> 00:03:45,274
for it to just adapt what's going on here so that it's for a single app setup. And 

49
00:03:45,274 --> 00:03:50,474
this is because I'm trying to do templates around building micro apps every day, 

50
00:03:50,608 --> 00:03:56,141
and I want a consistent user interface each time. And so we develop this role for 

51
00:03:56,141 --> 00:03:58,475
someone that can draw that interface for me.

52
00:03:58,475 --> 00:04:03,908
But before it does the work. I also said it might be useful if you give me 2 or 3 

53
00:04:03,908 --> 00:04:09,308
questions that I can answer. So what it's done is given me a bunch of Q and A's that 

54
00:04:09,308 --> 00:04:15,242
I can work through, and I've essentially taken a couple of headings from its questions 

55
00:04:15,242 --> 00:04:19,775
that it gave and gave my own opinion of what I want to see happen, and from there 

56
00:04:19,775 --> 00:04:26,175
we ended up with a role basically for a single app UX designer. So it's very similar, 

57
00:04:26,175 --> 00:04:31,742
but it's got differences that will be important when we go to generate this new structure.

58
00:04:31,776 --> 00:04:35,942
So with the role created, we can go and select all the information that's in there, 

59
00:04:35,942 --> 00:04:41,676
put in the clipboard. And basically after we do our conversation starter and we've 

60
00:04:41,676 --> 00:04:46,476
put read and wait for guidance, press enter. We would just paste that particular 

61
00:04:46,476 --> 00:04:49,010
information directly into the conversation window.

62
00:04:49,043 --> 00:04:54,010
Now I did that in Claude, but let's look at the code implementation prompt, which 

63
00:04:54,043 --> 00:05:00,210
in my case I did in ChatGPT. But what we'd want to do is here is the design brief, 

64
00:05:00,210 --> 00:05:05,077
please implement and we'll paste it in. And we can see a design brief has been put 

65
00:05:05,077 --> 00:05:10,677
in place, and I'll just go over quickly how I adapted the design brief to make this 

66
00:05:10,677 --> 00:05:11,010
one.

67
00:05:11,010 --> 00:05:12,544
Now, the desktop single app design document is fairly extensive. It goes through 

68
00:05:12,544 --> 00:05:16,677
Now, the desktop single app design document is fairly extensive. It goes through 

69
00:05:16,677 --> 00:05:21,811
and every time I run it, it tends to give an accurate result each time. But to create 

70
00:05:21,811 --> 00:05:26,644
it was fairly simple, because what we did was we built on top of the design we did 

71
00:05:26,778 --> 00:05:32,678
in the last video, which was the Multi Application framework, and we just pasted 

72
00:05:32,678 --> 00:05:34,978
it all in and asked it a simple question.

73
00:05:35,011 --> 00:05:40,078
Now, the follow up statement to that design document was essentially to update the 

74
00:05:40,078 --> 00:05:45,245
current Multi-app shell so that it looks more like a single app shell. And when you're 

75
00:05:45,245 --> 00:05:49,845
doing that, should we drop anything, simplify or reframe any of the statements that 

76
00:05:49,845 --> 00:05:50,412
were there?

77
00:05:50,412 --> 00:05:55,712
Now the drop, simplify, reframe process worked out concepts about what it thought 

78
00:05:55,712 --> 00:06:00,212
we should drop one of them I didn't really want to let go of. I wanted the command 

79
00:06:00,245 --> 00:06:04,912
K for searching, but I didn't need it for application switching, so a minor change 

80
00:06:04,912 --> 00:06:10,512
there. It then talked about different areas that were common and reframed them so 

81
00:06:10,512 --> 00:06:16,079
they made more sense in a single application structure. It also gave a couple of 

82
00:06:16,079 --> 00:06:20,646
minimal ideas to think about, and I took some of these into account. For instance, 

83
00:06:20,646 --> 00:06:22,713
I didn't want to have a footer status bar.

84
00:06:22,713 --> 00:06:26,913
So from there I just gave it a few instructions, such as what I wanted with the command 

85
00:06:26,946 --> 00:06:32,547
K, a couple of other changes. It started building a single app spec. Now I read this 

86
00:06:32,613 --> 00:06:36,447
in detail. It's really important that you get it right. A couple of things that I 

87
00:06:36,480 --> 00:06:42,047
noticed is it was going into the technical side of things, such as using a convex 

88
00:06:42,047 --> 00:06:48,347
database, and this is a pure UX experience. I don't want to get into the underlying 

89
00:06:48,380 --> 00:06:52,881
technologies when building out this prompt, so I let it know. It made a couple of 

90
00:06:52,914 --> 00:06:59,047
modifications, and we kept going until we had a final application design that I could 

91
00:06:59,047 --> 00:07:02,948
run on a consistent basis. And this did work the first time.

92
00:07:02,981 --> 00:07:08,081
So now that you got a copy of the design brief, we can work through the three prompts 

93
00:07:08,081 --> 00:07:11,681
that are listed here. Now, if we head over to Claude, this is what I did the first 

94
00:07:11,681 --> 00:07:17,881
time. In this conversation we'll explore single app UX design, say yay and wait. 

95
00:07:17,881 --> 00:07:23,148
So it started waiting, ready to move forward. And I said read and wait for guidance. 

96
00:07:23,148 --> 00:07:28,582
And I gave it the role. It became a personality. So it says, got it. I understand 

97
00:07:28,582 --> 00:07:33,415
my role and it's got a little bit of conversation about what goes on. Waiting for 

98
00:07:33,415 --> 00:07:38,282
your guidance on the single app design we're creating. I said, here is the design 

99
00:07:38,282 --> 00:07:42,949
brief, please implement. And I press paste and I pressed enter to see what it would 

100
00:07:42,949 --> 00:07:47,083
create. So we end up with a whole lot of code. You'll notice that there's various 

101
00:07:47,083 --> 00:07:51,083
versions going on here. So I'm just going to bring up version one, which is the first 

102
00:07:51,083 --> 00:07:55,583
one that it created. And you can see that it had a little bit of a challenge here.

103
00:07:55,583 --> 00:08:00,050
So I naturally had a look behind the scenes just to see what was going on. I did 

104
00:08:00,083 --> 00:08:06,217
notice the way it was scripting out to tailwind CSS was in the times that it failed. 

105
00:08:06,217 --> 00:08:10,983
It looked like this. I gave it a basic prompt that said, why does it look like this? 

106
00:08:11,217 --> 00:08:16,517
Is there an issue with CSS or links? And it said, yes, I think it's a CDN issue. 

107
00:08:16,550 --> 00:08:21,317
And so then when we move on to version two of this, everything started to come together 

108
00:08:21,317 --> 00:08:27,517
looking well. And we can see that it's popping out to Cloudflare to a tailwind module. 

109
00:08:27,751 --> 00:08:34,084
So my experience with using this prompt was that it would give really great output. 

110
00:08:34,084 --> 00:08:40,518
But when used in the Claude application it would sometimes work, sometimes not unrelated 

111
00:08:40,518 --> 00:08:45,418
to the actual code, but more to the order of how things were being called within 

112
00:08:45,418 --> 00:08:48,451
the code base. So I'm going to show you a quick way.

113
00:08:48,451 --> 00:08:53,785
Now, I just mentioned that if you want one on one help or guidance on vibe coding 

114
00:08:53,785 --> 00:08:58,885
or using AI pair programmers, then go look for AppDave online. Once you get there, 

115
00:08:58,885 --> 00:09:02,885
you'll come up to the main website where you can book a call with me and we can do 

116
00:09:02,885 --> 00:09:07,919
one on one sessions in the area of AI pair programming and coding.

117
00:09:07,919 --> 00:09:13,652
So getting back to this session, what I found was generating it within the Claude 

118
00:09:13,686 --> 00:09:19,219
application was hit or miss. So if we move on to version three, we start seeing similar 

119
00:09:19,219 --> 00:09:24,486
sorts of errors over and over again. And it's not until we get to version five that 

120
00:09:24,486 --> 00:09:30,219
we get another working version, though not quite as good. So what I thought was I'll 

121
00:09:30,219 --> 00:09:35,853
break out to an IDE, or in this case we'll be using Claude Code just to generate 

122
00:09:35,886 --> 00:09:37,553
bulk versions of this.

123
00:09:37,586 --> 00:09:42,620
So I've just opened up Visual Studio, and you can see here that I've got three examples, 

124
00:09:42,620 --> 00:09:47,153
which we'll look at soon. But the first thing we should look at is the role. And 

125
00:09:47,153 --> 00:09:51,520
so the role is in markdown format. We can see that it's a single app, 

126
00:09:51,554 --> 00:09:56,587
UX UI design specialist. We've got all the expertise, all the guidance for what that 

127
00:09:56,587 --> 00:10:01,654
role should entail. After that, we've got the design brief going on here, and this 

128
00:10:01,654 --> 00:10:07,854
is a full spec of what we would like to generate. It's a single app framework shell. 

129
00:10:07,854 --> 00:10:12,388
we've got the layout, a menu. On the left. We've got the different pages that we 

130
00:10:12,388 --> 00:10:17,488
want to see an example of. We've got a content panel in the center. We're gonna have 

131
00:10:17,488 --> 00:10:23,555
command K as a key that can make things happen, like search. And there's an optional 

132
00:10:23,555 --> 00:10:25,721
top bar. We'll see what it does there. 

133
00:10:25,721 --> 00:10:30,822
And we've got this important idea of theming is that it supports light and dark mode. 

134
00:10:31,088 --> 00:10:37,255
So from there, all we can do is go into a terminal and I'm just going to use Claude 

135
00:10:37,255 --> 00:10:42,789
in this case. So we'll go Claude. I'm specifically going to use the Sonnet model. 

136
00:10:42,889 --> 00:10:47,722
I don't wanna waste my credits on Opus. It's not really needed for the problem we're 

137
00:10:47,722 --> 00:10:49,122
trying to deal with here.

138
00:10:49,156 --> 00:10:53,222
So the simple prompt will be something similar to this. Become

139
00:10:53,222 --> 00:10:58,723
the role and we'll just put in the At sign and we'll go and select role down the 

140
00:10:58,723 --> 00:11:03,356
bottom there. And this is this file that we can see over on the left being used. 

141
00:11:03,389 --> 00:11:08,623
Now I'll just come over to the design brief. Can you implement.

142
00:11:08,623 --> 00:11:14,990
And we'll just say design brief. We'll select that and right into

143
00:11:15,023 --> 00:11:20,923
index example four. So it's just going to impersonate the role. Try to implement 

144
00:11:20,923 --> 00:11:25,257
the design brief and then write it out to a file that doesn't currently exist.

145
00:11:25,257 --> 00:11:30,490
So it's now going through a chain of thought. It's going to create a HTML structure, 

146
00:11:30,490 --> 00:11:35,491
implement the different concepts as we go. At the end we're going to see a green 

147
00:11:35,557 --> 00:11:38,091
file here called index example four

148
00:11:38,291 --> 00:11:38,891
HTML.

149
00:11:38,924 --> 00:11:41,357
So that took about two or three minutes. 

150
00:11:41,357 --> 00:11:45,891
So let's figure out how this all works. So we'll come over. We've got a dashboard. 

151
00:11:45,891 --> 00:11:50,991
It's looking pretty good. We can go to a wizard. There should only be one step implemented. 

152
00:11:50,991 --> 00:11:56,825
That's all I asked for in the prompt. Then we've got a form and it's a pretty complex 

153
00:11:56,825 --> 00:12:02,725
form. This is great. We've got analytics. Now we've got to figure out where the theme 

154
00:12:02,725 --> 00:12:03,691
changes are.

155
00:12:03,691 --> 00:12:10,258
We can't see them yet. Let's check this command K first. So if I type in dashboard 

156
00:12:10,292 --> 00:12:14,792
yep. Great. And Wizard this is working good. If I go down to settings

157
00:12:14,792 --> 00:12:19,825
here are our themes. So we've got light and we've got dark. This is looking pretty 

158
00:12:19,825 --> 00:12:23,726
good. So that's our dashboard and wizard.

159
00:12:23,826 --> 00:12:30,659
So moving on to the first example, which I did earlier, and we've got the dashboard, 

160
00:12:30,792 --> 00:12:34,893
a wizard. We've got a form. It's similar, but it is different 

161
00:12:34,926 --> 00:12:40,893
analytics. The command K on this one works. I know that. So we can type information 

162
00:12:40,893 --> 00:12:45,893
in when we look at how the settings were done, it's same concept, just a different 

163
00:12:45,893 --> 00:12:50,993
way of implementing the control. This is working. Great. Moving on to example two. 

164
00:12:51,293 --> 00:12:55,627
Much better look and feel. This was what I loved about this, was the idea that you 

165
00:12:55,627 --> 00:13:01,227
could use the same role and prompt multiple times and get totally different outputs 

166
00:13:01,260 --> 00:13:06,627
while still keeping true to the goal. So we've got a wizard, we've got a data form 

167
00:13:06,660 --> 00:13:08,294
and we've got analytics. 

168
00:13:08,394 --> 00:13:14,861
we've got our little theme button here, but if we click on it, the dark theme is 

169
00:13:14,861 --> 00:13:19,627
not quite the colors we want. We'd need to play around with this a little bit. And 

170
00:13:19,627 --> 00:13:24,161
can I go back? I can command K seems to work. This is good. 

171
00:13:24,161 --> 00:13:26,061
And what do preferences do? 

172
00:13:26,061 --> 00:13:31,995
we can do our themes here as well. Interesting. And if I move on to the last example, 

173
00:13:31,995 --> 00:13:37,995
which is example three for me, we've got dashboard, wizard, form, and analytics. 

174
00:13:37,995 --> 00:13:44,595
We've got command K, so if we put in dashboard looking great and settings, it does 

175
00:13:44,595 --> 00:13:46,462
it as a little button, which is pretty cool.

176
00:13:46,462 --> 00:13:52,262
So just as a quick recap, in the last video I did, we created a role and we created 

177
00:13:52,262 --> 00:13:59,162
a brief on multi app desktop design briefs. In this video, what we've done is taken 

178
00:13:59,162 --> 00:14:04,562
those original prompts and we've used an adaption technique. We've modified the role 

179
00:14:04,562 --> 00:14:08,263
to a single app person. We've modified the design brief 

180
00:14:08,396 --> 00:14:12,663
to a single app design brief. After that, what we did was we just worked through 

181
00:14:12,663 --> 00:14:18,430
the simple, prompt structure, start the conversation, inject the role, finally inject 

182
00:14:18,496 --> 00:14:23,196
the design brief. We basically the word implement and let it go and do what it needs 

183
00:14:23,196 --> 00:14:23,663
to do. 

184
00:14:23,663 --> 00:14:28,063
now, it worked really well in Claude code. It was a little bit hit and miss in the 

185
00:14:28,063 --> 00:14:32,763
Claude Web application, but that had nothing to do so much with the code, but just 

186
00:14:32,763 --> 00:14:36,597
the way it was trying to load JavaScript in that particular environment.

187
00:14:36,630 --> 00:14:42,297
Anyway, I'm AppyDave. In the next video, we'll be continuing this journey of of developing 

188
00:14:42,297 --> 00:14:47,564
micro apps using Claude Code. So if you want to see more about this then please like 

189
00:14:47,564 --> 00:14:49,797
and subscribe and I'll see you in the next video.
